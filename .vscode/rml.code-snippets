{
	// Place your rml workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"header" : {
		"prefix": "header",
		"body": [
			"$BLOCK_COMMENT_START",
			"File: $RELATIVE_FILEPATH",
			"Author: piderking",
			"Created: $CURRENT_MONTH/$CURRENT_DATE/$CURRENT_YEAR",
			"Description: ${1: Description}",
			"$BLOCK_COMMENT_END"
		]
	},
	"struct": {
		"prefix": "rst" ,
		"description": "create a public struct",
		"scope": "rust",
		"body": [
			"pub struct ${1/(.)/${1:/camelcase}/} {",
			"${0}",
			"}"
		]
	},
	"struct-w-generic": {
		"prefix": "rstg" ,
		"description": "create a generic public struct",
		"scope": "rust",
		"body": [
			"pub struct ${1/(.)/${1:/downcase}/} <${2:Name}:${3:Type}>{",
			"${0}",
			"}"
		]
	},
	"struct-w-lifetime": {
		"prefix": "rstl" ,
		"description": "create a lifetime public struct",
		"scope": "rust",
		"body": [
			"pub struct ${1/(.)/${1:/downcase}/} <'${2:a}>{",
			"${0}",
			"}"
		]
	},
	"struct-and-impl": {
		"prefix": "rsti" ,
		"description": "create a public struct with impl",
		"scope": "rust",
		"body": [
			"pub struct ${1/(.)/${1:/downcase}/} {",
			"${0}",
			"}",
			"",
			"impl ${1} {",
			"",
			"}"
		]
	},
}